datasource db {
  provider = "postgresql"
  url      = env("PRISMA_PY_POSTGRES_URL")
}

generator db {
  provider                    = "prisma-client-py"
  interface                   = "asyncio"
  recursive_type_depth        = -1
  enable_experimental_decimal = true
}

model Post {
  id         String     @id @default(cuid())
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  title      String
  published  Boolean
  views      Int        @default(0)
  desc       String?
  author     User?      @relation(fields: [author_id], references: [id])
  author_id  String?
  categories Category[]
}

model User {
  id      String   @id @default(cuid())
  name    String
  email   String?  @unique
  posts   Post[]
  profile Profile?
}

model Category {
  id    Int    @id @default(autoincrement())
  posts Post[]
  name  String
}

model Profile {
  id      Int     @id @default(autoincrement())
  user    User    @relation(fields: [user_id], references: [id])
  user_id String  @unique
  bio     String
  city    String?
  country String?
  views   Int     @default(0)
}

// models that just exists for testing different schema types
model Types {
  id       Int      @id @default(autoincrement())
  bool     Boolean  @default(false)
  string   String   @default("")
  bytes    Bytes    @default("")
  bigint   BigInt   @default(0)
  integer  Int      @default(0)
  float_   Float    @default(0)
  json_obj Json     @default("{}")
  datetime DateTime @default(now())
  decimal  Decimal  @default(22.99)
}

model Lists {
  id           String     @id @default(cuid())
  strings      String[]
  bytes        Bytes[]
  dates        DateTime[]
  bools        Boolean[]
  ints         Int[]
  floats       Float[]
  bigints      BigInt[]
  json_objects Json[]
  roles        Role[]
  decimals     Decimal[]
}

enum Role {
  USER
  ADMIN
  EDITOR
}
