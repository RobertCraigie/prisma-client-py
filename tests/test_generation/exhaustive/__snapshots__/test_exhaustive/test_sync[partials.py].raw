'''
# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template partials.py.jinja --
from pydantic import validator
from . import types, fields, enums, actions, models
from .bases import PrismaModelT, PrismaModel as _PrismaModel


class PostWithAuthor(_PrismaModel):
    id: _str
    title: _str
    author: Optional[models.User]

    __prisma_model__: ClassVar[str] = 'Post'

    
    # TODO: try out mypy on the latest version to see if this doesn't crash anymore
    @classmethod
    def prisma(cls) -> 'NoReturn':
        raise RuntimeError(
            'Querying has been disabled as it cannot be typed with mypy;\n'
            'You must switch to using fully recursive types to enable querying from this model\n'
            'https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/#querying-from-partial-models'
        )





class UserOnlyName(_PrismaModel):
    name: _str

    __prisma_model__: ClassVar[str] = 'User'

    
    # TODO: try out mypy on the latest version to see if this doesn't crash anymore
    @classmethod
    def prisma(cls) -> 'NoReturn':
        raise RuntimeError(
            'Querying has been disabled as it cannot be typed with mypy;\n'
            'You must switch to using fully recursive types to enable querying from this model\n'
            'https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/#querying-from-partial-models'
        )





class PostWithCustomAuthor(_PrismaModel):
    id: _str
    title: _str
    author: Optional['partials.UserOnlyName']

    __prisma_model__: ClassVar[str] = 'Post'

    
    # TODO: try out mypy on the latest version to see if this doesn't crash anymore
    @classmethod
    def prisma(cls) -> 'NoReturn':
        raise RuntimeError(
            'Querying has been disabled as it cannot be typed with mypy;\n'
            'You must switch to using fully recursive types to enable querying from this model\n'
            'https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/#querying-from-partial-models'
        )





class UserWithPosts(_PrismaModel):
    name: _str
    posts: Optional[List['models.Post']]

    __prisma_model__: ClassVar[str] = 'User'

    
    # TODO: try out mypy on the latest version to see if this doesn't crash anymore
    @classmethod
    def prisma(cls) -> 'NoReturn':
        raise RuntimeError(
            'Querying has been disabled as it cannot be typed with mypy;\n'
            'You must switch to using fully recursive types to enable querying from this model\n'
            'https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/#querying-from-partial-models'
        )





class PostWithNestedRelations(_PrismaModel):
    id: _str
    title: _str
    author: Optional['partials.UserWithPosts']

    __prisma_model__: ClassVar[str] = 'Post'

    
    # TODO: try out mypy on the latest version to see if this doesn't crash anymore
    @classmethod
    def prisma(cls) -> 'NoReturn':
        raise RuntimeError(
            'Querying has been disabled as it cannot be typed with mypy;\n'
            'You must switch to using fully recursive types to enable querying from this model\n'
            'https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/#querying-from-partial-models'
        )






# users can modify relational types which are then namespaced to partials.
# so we have to import ourselves in order to resolve forward references
from . import partials

PostWithAuthor.update_forward_refs()
UserOnlyName.update_forward_refs()
PostWithCustomAuthor.update_forward_refs()
UserWithPosts.update_forward_refs()
PostWithNestedRelations.update_forward_refs()

# fmt: on

'''